"use strict";(self.webpackChunksfmcify=self.webpackChunksfmcify||[]).push([[5357],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var a=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},s=Object.keys(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=a.createContext({}),c=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},u=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},p=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,s=e.originalType,l=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),p=c(n),m=o,h=p["".concat(l,".").concat(m)]||p[m]||d[m]||s;return n?a.createElement(h,r(r({ref:t},u),{},{components:n})):a.createElement(h,r({ref:t},u))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var s=n.length,r=new Array(s);r[0]=p;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:o,r[1]=i;for(var c=2;c<s;c++)r[c]=n[c];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}p.displayName="MDXCreateElement"},5996:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>d,frontMatter:()=>s,metadata:()=>i,toc:()=>c});var a=n(7462),o=(n(7294),n(3905));const s={id:"DataPrivacyManagerAndSFMC",title:"Data Privacy Manager & SFMC custom subscription center to manage your subscribers\u2019s consents",sidebar_label:"Data Privacy Manager & SFMC",tags:["DataPrivacy","GDPR","AMPScript","MarketingCloud Connect"]},r=void 0,i={unversionedId:"SFMC AMPScript/DataPrivacyManagerAndSFMC",id:"SFMC AMPScript/DataPrivacyManagerAndSFMC",title:"Data Privacy Manager & SFMC custom subscription center to manage your subscribers\u2019s consents",description:"In this article, I will be covering a way to manage your contact\u2019s consents on Marketing Cloud when connected to Sales/Service Cloud.",source:"@site/docs/SFMC AMPScript/DataPrivacyManagerAndSFMC.md",sourceDirName:"SFMC AMPScript",slug:"/SFMC AMPScript/DataPrivacyManagerAndSFMC",permalink:"/sfmcify.github.io/docs/SFMC AMPScript/DataPrivacyManagerAndSFMC",draft:!1,tags:[{label:"DataPrivacy",permalink:"/sfmcify.github.io/docs/tags/data-privacy"},{label:"GDPR",permalink:"/sfmcify.github.io/docs/tags/gdpr"},{label:"AMPScript",permalink:"/sfmcify.github.io/docs/tags/amp-script"},{label:"MarketingCloud Connect",permalink:"/sfmcify.github.io/docs/tags/marketing-cloud-connect"}],version:"current",frontMatter:{id:"DataPrivacyManagerAndSFMC",title:"Data Privacy Manager & SFMC custom subscription center to manage your subscribers\u2019s consents",sidebar_label:"Data Privacy Manager & SFMC",tags:["DataPrivacy","GDPR","AMPScript","MarketingCloud Connect"]},sidebar:"tutorialSidebar",previous:{title:"AMPScript",permalink:"/sfmcify.github.io/docs/category/ampscript"},next:{title:"Manage Spam Complaints",permalink:"/sfmcify.github.io/docs/SFMC AMPScript/ManageSpamComplaints"}},l={},c=[{value:"How are consents stored in Sales Cloud?",id:"how-are-consents-stored-in-sales-cloud",level:2},{value:"How are subscriptions handled on SFMC?",id:"how-are-subscriptions-handled-on-sfmc",level:2},{value:"Consents from Sales Cloud to SFMC",id:"consents-from-sales-cloud-to-sfmc",level:2},{value:"Setup the data extension",id:"setup-the-data-extension",level:3},{value:"Setup the CloudPage",id:"setup-the-cloudpage",level:3},{value:"Unsubscribe a contact from all communications",id:"unsubscribe-a-contact-from-all-communications",level:3}],u={toc:c};function d(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"In this article, I will be covering a way to manage your contact\u2019s consents on Marketing Cloud when connected to Sales/Service Cloud. "),(0,o.kt)("p",null,"There is a lot of ways to be GDPR compliant on Salesforce. You can implement the whole process, or save yourself the headaches and use a plugin."),(0,o.kt)("p",null,"We are going to cover basically the SFMC part on how the plugin ",(0,o.kt)("a",{parentName:"p",href:"https://appexchange.salesforce.com/appxListingDetail?listingId=a0N3A00000FALyMUAX"},"Data Privacy Manager app")," can be used to manage contacts consents on both Sales and Marketing clouds. I\u2019m not going deep on details on the Sales Cloud part, I assume that its pretty simple to plug the app to your system."),(0,o.kt)("h2",{id:"how-are-consents-stored-in-sales-cloud"},"How are consents stored in Sales Cloud?"),(0,o.kt)("p",null,"Data Privacy Manager plugin provides data privacy tracking for each type of communication for leads, contacts and person accounts."),(0,o.kt)("p",null,"The application uses a field on each object to track consents. Each consent is represented by a unique auto-generated six digit code. These values are concatenated into the field and separated by a comma."),(0,o.kt)("admonition",{title:"example",type:"info"},(0,o.kt)("p",{parentName:"admonition"},"If we have two types of communications for our contacts, let\u2019s call them ",(0,o.kt)("inlineCode",{parentName:"p"},"Newsletter")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"SpecialOffers"),", they will have the ids ",(0,o.kt)("strong",{parentName:"p"},"100001")," & ",(0,o.kt)("strong",{parentName:"p"},"100002"),". ")),(0,o.kt)("p",null,"We\u2019re going to use a custom field on each object, let\u2019s stick with the app\u2019s recommendation and call it ",(0,o.kt)("inlineCode",{parentName:"p"},"datapm__CommunicationRules__c_"),"."),(0,o.kt)("h2",{id:"how-are-subscriptions-handled-on-sfmc"},"How are subscriptions handled on SFMC?"),(0,o.kt)("p",null,"Usually, we use the standard fields on Sales/Service Cloud to manage consents (",(0,o.kt)("inlineCode",{parentName:"p"},"HasOptedOutOfEmail"),"). But sometimes, especially when the context is a little more complex than that, we need to have a lot of channels/consents. Which means we need a ",(0,o.kt)("strong",{parentName:"p"},"custom")," way to manage our consents."),(0,o.kt)("p",null,"Therefore, we no longer need to rely on the connector to send back unsubscribes from SFMC to Sales/Service Cloud. Which means, we no longer need to use the ",(0,o.kt)("inlineCode",{parentName:"p"},"UnsubEvent")," to log unsubscribes."),(0,o.kt)("admonition",{title:"The UnsubEvent, what is it?",type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"To unsubscribe a contact/lead/person account from AllSubscribers, we need to log an ",(0,o.kt)("strong",{parentName:"p"},"UnsubEvent"),". It is essential to the proper working and tracking of unsubscribers on SFMC if you are using the standard fields to manage consents (",(0,o.kt)("inlineCode",{parentName:"p"},"HasOptedOutOfEmail"),"). Creating the UnsubEvent will update the subscriber\u2019s status on AllSub and send back this information to our Sales/Service Cloud org through the Marketing Cloud Connector.")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Manage subscribers status outside of AllSubscribers")),(0,o.kt)("p",null,"You may ask, if we are not using standard fields and AllSubscribers to manage consents, how are we going to do it? We need to move the complexity to a ",(0,o.kt)("strong",{parentName:"p"},"Data Extension"),". Depending on your architecture, you may need more than one."),(0,o.kt)("h2",{id:"consents-from-sales-cloud-to-sfmc"},"Consents from Sales Cloud to SFMC"),(0,o.kt)("h3",{id:"setup-the-data-extension"},"Setup the data extension"),(0,o.kt)("p",null,"First of all, we need a data extension to store our contact\u2019s consents. Each consent will be represented by a boolean field. A True value means we have the contact\u2019s consent to receive that type of emails. A False value means the contact has not given his consent or has unsubscribed."),(0,o.kt)("p",null,"Here is a reference to the data extension we will be calling ",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("inlineCode",{parentName:"strong"},"Consents")),". This is a very simple version of the data extension:"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Field Name"),(0,o.kt)("th",{parentName:"tr",align:null},"Field Type"),(0,o.kt)("th",{parentName:"tr",align:null},"Length"),(0,o.kt)("th",{parentName:"tr",align:null},"Default Value"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"SubscriberKey"),(0,o.kt)("td",{parentName:"tr",align:null},"Text"),(0,o.kt)("td",{parentName:"tr",align:null},"18"),(0,o.kt)("td",{parentName:"tr",align:null})),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"NewsletterEmail_Consent"),(0,o.kt)("td",{parentName:"tr",align:null},"Boolean"),(0,o.kt)("td",{parentName:"tr",align:null},"False"),(0,o.kt)("td",{parentName:"tr",align:null},"False")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"SpecialOffersEmail_Consent"),(0,o.kt)("td",{parentName:"tr",align:null},"Boolean"),(0,o.kt)("td",{parentName:"tr",align:null},"False"),(0,o.kt)("td",{parentName:"tr",align:null},"False")))),(0,o.kt)("admonition",{type:"caution"},(0,o.kt)("p",{parentName:"admonition"},"We need to give a default value to our boolean fields so that by default, if we don\u2019t have the information about a contact\u2019s consent, we don\u2019t send him anything.")),(0,o.kt)("p",null,"As explained before, consents are concatenated in ",(0,o.kt)("inlineCode",{parentName:"p"},"datapm__CommunicationRules__c_")," field and separated by a comma. Each consent is represented by a unique id. We need an SQL query to parse the ids and update the booleans in our data extension. It should look like this:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT\n\nCT.Id AS SubscriberKey,\n\nCASE \nWHEN CT.datapm__CommunicationRules__c  LIKE '%100001%' THEN 'TRUE'\nELSE 'FALSE' \nEND AS NewsletterEmail_Consent,\n\nCASE \nWHEN CT.datapm__CommunicationRules__c  LIKE '%100002%' THEN 'TRUE'\nELSE 'FALSE' \nEND AS SpecialOffersEmail_Consent\n\nFROM Contact_Salesforce \n")),(0,o.kt)("p",null,"The query uses two ",(0,o.kt)("inlineCode",{parentName:"p"},"CASE")," statements to look for the consents ids, if the id is found, the field is populated with a True which means we have the person\u2019s consent to receive that type of communication. It will be set to ",(0,o.kt)("inlineCode",{parentName:"p"},"update")," the ",(0,o.kt)("strong",{parentName:"p"},"Consent")," data extension."),(0,o.kt)("p",null,"Nothing fancy until now, the process seems simple and pretty straightforward."),(0,o.kt)("p",null,"Now, you should be asking, ",(0,o.kt)("strong",{parentName:"p"},"how are we sending back unsubscribes to Sales Cloud?")),(0,o.kt)("h3",{id:"setup-the-cloudpage"},"Setup the CloudPage"),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"Data Privacy Manager provides a simple way to add permissions or unsubscribe a contact, lead or person account by ",(0,o.kt)("strong",{parentName:"p"},"creating a Task with specific texts in the subject and comments fields"),".")),(0,o.kt)("p",null,"Let\u2019s build a one-click unsubscribe cloud page for contacts. The page will unsubscribe the contact from Newsletter communications."),(0,o.kt)("p",null,"First, we need get the ",(0,o.kt)("inlineCode",{parentName:"p"},"emailaddr")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"subscriberkey")," values from the context. Then, we need to get the contact\u2019s consent from our data extension because we don\u2019t want to make an update if the contact has already visited the page and asked to be unsubscribed:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},'%%[\n\nSET @emailaddr = AttributeValue("emailaddr")\n\nSET @subKey = AttributeValue("_subscriberkey")\n\n/* Get the NewsletterEmail_Consent value from Consents Data Extension */\n\nSET @rowsConsents = LookupRows("Consents", "SubscriberKey", @subKey)\n\nIF RowCount(@rowsConsents) > 0 then\n\nSET @consentRow = Row(@rowsConsents,1)\n\nSET @newsletterEmail_Consent = Field(@consentRow, "NewsletterEmail_Consent")\n\nENDIF\n\n]%%\n')),(0,o.kt)("p",null,"Next, we need to create a Task using the ",(0,o.kt)("inlineCode",{parentName:"p"},"CreateSalesforceObject")," function. The object of this Task should be:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"'Subject', 'Datapm:Unsubscribe'\n")),(0,o.kt)("p",null,"And the description should contain the id of the consent from which we want the contact to be unsubscribed. In this case, let\u2019s say it is ",(0,o.kt)("inlineCode",{parentName:"p"},"100001"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"'Description', '{\"crCode\":\"100001\"}'\n")),(0,o.kt)("p",null,"The function should look like below. We use the ",(0,o.kt)("inlineCode",{parentName:"p"},"WhoId")," to identify the contact to whom the Task will be affected. Then, we add the subject and the description as explained. "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"CreateSalesforceObject('Task',4,'WhoId', @subKey, 'Subject', 'Datapm:Unsubscribe', 'Description', '{\"crCode\":\"100001\"}', 'ActivityDate', @timeNow)\n")),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"More fields may be needed depending on your implementation on Sales Cloud (mandatory fields on the Task object).")),(0,o.kt)("p",null,"Now let\u2019s take a look at the function with all the parameters:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"%%[\n\n/* Check if the contact is subscribed to the newsletterEmail_Consent */\n\nIF (@newsletterEmail_Consent != 'False') THEN\n\nSET @timeNow = FormatDate(Now(),\"iso\")\n\nSET @created_taskId= CreateSalesforceObject('Task',4,'WhoId', @subKey, 'Subject', 'Datapm:Unsubscribe', 'Description', '{\"crCode\":\"100001\"}', 'ActivityDate', @timeNow)\n\n/* Update Consents Data Extension */\n\nUpsertData(\"Consents\", 1, \"SubscriberKey\", @subKey, \"NewsletterEmail_Consent\", \"False\")\n\nENDIF\n\n]%%\n")),(0,o.kt)("p",null,"Let\u2019s take a look at the full script. We have used Bootstrap to make it look beautiful and responsive. Also, we\u2019ve added a confirmation message."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript",metastring:"Full code",Full:!0,code:!0},'<!doctype html>\n<html>\n<head>\n\n <meta charset="utf-8">\n <meta name="description" content="">\n <meta name="viewport" content="width=device-width, initial-scale=1">\n <title>Unsubscribe - Newsletter</title>\n\n \x3c!-- jQuery (necessary for Bootstrap\'s JavaScript plugins) --\x3e\n <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js"><\/script>\n \x3c!-- Bootstrap --\x3e\n \x3c!-- Latest compiled and minified CSS --\x3e\n <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css" integrity="sha384-1q8mTJOASx8j1Au+a5WDVnPi2lkFfwwEAa8hDDdjZlpLegxhjVME1fgjWPGmkzs7" crossorigin="anonymous">\n \x3c!-- Optional theme --\x3e\n <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap-theme.min.css" integrity="sha384-fLW2N01lMqjakBkx3l/M9EahuwpSfeNvV63J5ezn3uZzapT0u7EYsXMjQV+0En5r" crossorigin="anonymous">\n\n  <style>\n body {\n  font-family: \'Montserrat\', sans-serif;\n  color: #412761\n }\n  </style>\n \x3c!-- Latest compiled and minified JavaScript --\x3e\n <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/js/bootstrap.min.js" integrity="sha384-0mSbJDEHialfmuBBQP6A4Qrprq5OVfW37PRR3j5ELqxss1yVqOtnepnHVP9aJ7xS" crossorigin="anonymous"><\/script> \n%%[\n  \n SET @emailaddr = AttributeValue("emailaddr")\n SET @subKey = AttributeValue("_subscriberkey")\n\n/* Get the NewsletterEmail_Consent value from Consents Data Extension */\nSET @rowsConsents = LookupRows("Consents", "SubscriberKey", @subKey)\nIF RowCount(@rowsConsents) > 0 then\n   SET @consentRow = Row(@rowsConsents,1) \n   SET @newsletterEmail_Consent = Field(@consentRow, "NewsletterEmail_Consent")\nENDIF\n\n/* Check if the contact is subscribed to the newsletterEmail_Consent */\nIF (@newsletterEmail_Consent != \'False\') THEN \n  SET @timeNow = FormatDate(Now(),"iso")\n  SET @created_taskId= CreateSalesforceObject(\'Task\',4,\'WhoId\', @subKey, \'Subject\', \'Datapm:Unsubscribe\', \'Description\', \'{"crCode":"100001"}\', \'ActivityDate\', @timeNow)\n\n  /* Update Consents Data Extension */\n  UpsertData("Consents", 1, "SubscriberKey", @subKey, "NewsletterEmail_Consent", "False")\nENDIF\n]%%\n  \n</head>\n<body>\n\x3c!-- Logo start--\x3e\n<div class="row" style="background-color:#ab5643;">\n <div class="col-md-3" style="margin-left:5%;margin-top:1%;margin-bottom:2%;">\n  <img width="250px" height="100px" src="YOUR_LOGO_LINK" alt="" id="logo"/>\n </div>\n <div class="col-md-9">\n </div>\n</div>\n\x3c!-- Logo end--\x3e\n\x3c!-- body start--\x3e\n<div class="row" style="background-color:#ffffff;">\n <div class="col-md-3">\n </div>\n <div class="col-md-6" >\n  <h3 style="margin:3%;margin-top: 20%;margin-bottom: 20%;">Sorry to see you go, the email %%=v(@emailaddr)=%% has been unsubscribed from our Newsletter. It will be effective in 48 hours.\n</h3> \n </div>\n <div class="col-md-3">\n </div>\n</div>\n\x3c!-- body end--\x3e\n</body>\n</html>\n')),(0,o.kt)("h3",{id:"unsubscribe-a-contact-from-all-communications"},"Unsubscribe a contact from all communications"),(0,o.kt)("p",null,"You might ask, what if we want to unsubscribe a contact from all communications and channels at once?"),(0,o.kt)("p",null,"Data Privacy Manager got you covered. There is no need to make multiple CreateSalesforceObject calls. All we need to do is make some changes on the subject's and comment's contents."),(0,o.kt)("p",null,"Let\u2019s say we want to unsubscribe a contact from all channels and communications at once, the subject should look like:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"Datapm:Optout\n")),(0,o.kt)("p",null,"And the comment field should be like:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"{}\n")),(0,o.kt)("p",null,"And if we want to unsubscribe the contact from all consents of a specific channel, we need to add the channels name in the comment\u2019s field. In this case, the contact will be unsubscribed from all emails:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},'{"channel":"email"}\n')),(0,o.kt)("p",null,"Don't hesitate to drop me a message/email if you have any questions/remarks, I\u2019ll be happy to answer them."))}d.isMDXComponent=!0}}]);